type User implements SearchableUser {
  id: ID! @unique
  sub: String
  name: String!
  rating: Float
}

type Fen {
  fen: String!
}

interface Game {
  id: ID! @unique
  startpos: Fen
  moveSets: [MoveSet!]!
  users: [UserRole!]!
}

enum UserRoles {
  WHITE
  BLACK
  ANNOTATOR
}

type UserRole {
  user: SearchableUser
  role: UserRoles
}

type AnnotatedGame implements Game {
  id: ID! @unique
  startpos: Fen
  moveSets: [MoveSet!]!
  users: [UserRole!]!
}

type BlogPost {
  id: ID! @unique
  slug: String! @unique
  title: String!
  game: AnnotatedGame
  markup: String
  keywords: [String!]
  published: Boolean @default(value: "false")
}

type MoveSet {
  moves: [String!]!
}

type Challenge {
  id: ID! @unique
  user: User
  timeControls: TimeControl
  rated: Boolean @default(value: "false")
}

enum TimeControlClasses {
  BULLET
  BLITZ
  RAPID
  CLASSIC
}

type TimeControl {
  id: ID! @unique
  increment: Float
  base: Float
  class: TimeControlClasses
  isCorrespondence: Boolean @default(value: "false")
}
